lock() {
	local MESSAGE='Service already running.'

	mkdir -p "$LOCK_DIR"

	if [ -f "$LOCK_FILE" ]; then
		printf "%s\n" "$MESSAGE" >&2
		notify "$MESSAGE"
		exit 1
	fi

	touch "$LOCK_FILE"
	trap "unlock '$LOCK_FILE'" EXIT
}

unlock() {
	local LOCK_FILE="$1"
	local MESSAGE='Lock file does not exist.'

	if ! [ -f "$LOCK_FILE" ]; then
		printf "%s\n" "$MESSAGE" >&2
		notify "$MESSAGE"
		exit 1
	fi

	rm "$LOCK_FILE"
}

exit_on_failure() {
	local PRESERVED_STATUS="$?"
	local NOTIFY="$1"
	local NEW_STATUS="$2"
	local MESSAGE="$3"

	if [ -z "$4" ]; then
		local OLD_STATUS="$PRESERVED_STATUS"
	else
		local OLD_STATUS="$4"
	fi

	# If the last command failed, we cleanup and exit.
	if ! [ "$OLD_STATUS" -eq 0 ]; then
		if [ -n "$MESSAGE" ]; then
			printf "%s\n" "$MESSAGE" >&2
		fi

		# Notify if we were told to do so.
		if ! [ "$NOTIFY" -eq 0 ]; then
			notify "$MESSAGE"
		fi

		exit "$NEW_STATUS"
	fi
}

check_dependency() {
	local COMMAND=$1
	local MESSAGE="$COMMAND is not installed on your system."

	if ! [ -x "$(command -v "$COMMAND")" ]; then
		printf "%s\n" "$MESSAGE" >&2
		notify "$MESSAGE"
		exit 1
	fi
}
