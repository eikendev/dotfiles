#!/usr/bin/env bash

# Author: eikendev (https://eiken.dev/)

TITLE='Thunderbird Unread'

ENV_FILE="$DOTFILES/local/sync-news.env"

source "$HOME/bin/dot/script-utils"

for cmd in inotifywait rg; do check_dependency $cmd; done

THUNDERBIRD_HOME="$HOME/.thunderbird"
THUNDERBIRD_PROFILE="$(sed -n '/Install/,$p' "$THUNDERBIRD_HOME/profiles.ini" | grep -m 1 -h -e 'Default=' | cut -c 9-)"
THUNDERBIRD_IMAPDIR="$HOME/.thunderbird/$THUNDERBIRD_PROFILE/ImapMail"

SCRIPT_HOME="$HOME/.local/share/thunderbird-unread"
TARGET_FILE="$SCRIPT_HOME/all.count"

if ! [ -d "$SCRIPT_HOME" ]; then
	if ! mkdir -p "$SCRIPT_HOME"; then
		printf "%s\n" 'Cannot create script home.' >&2
		exit 1
	fi
fi

if ! [ -f "$TARGET_FILE" ]; then
	if ! touch "$TARGET_FILE"; then
		printf "%s\n" 'Cannot create target file.' >&2
		exit 1
	fi
fi

if ! rm -f "$SCRIPT_HOME"/*.subcount; then
	printf "%s\n" 'Cannot clean up script home.' >&2
	exit 1
fi

accumulate_counts () {
	local row
	row="$(paste --delimiters=' ' "$SCRIPT_HOME"/*.subcount)"
	printf "%s  %s   " 'ïŠ·' "$row" > "$TARGET_FILE"
}

count_unread () {
	local account="$1"
	local total=0

	local counts
	# shellcheck disable=SC2016
	counts="$(rg \
		--no-config \
		--no-filename \
		--no-column \
		--no-line-number \
		--only-matching \
		--multiline \
		--multiline-dotall \
		--glob '*.msf' \
		--replace '$count' \
		'(\(\^A2=\d+\))*\p{any}*\(\^A2=(?P<count>\d+)\)' "$account")"

	for count in $counts; do
		total=$((total + count))
	done

	printf "%s\n" "Count for '$account' is '$total'."

	local name
	name="$(basename "$account")"

	printf '%d' "$total" > "$SCRIPT_HOME/$name.subcount"

	accumulate_counts &
}

monitor_account () {
	local account="$1"

	count_unread "$account" &

	inotifywait -m -q -e modify -e move -e create -e delete -r "$account" | while read -r; do
		count_unread "$account" &
	done
}

while true; do
	tb_pid="$(pgrep -u $UID -x thunderbird)"

	if [ $? -ne 0 ]; then
		printf '?' > "$TARGET_FILE"
		pkill -P $$
		sleep 5s
		continue
	fi

	for account in "$THUNDERBIRD_IMAPDIR"/*.unread; do
		if [ -d "$account" ]; then
			printf "%s\n" "Now monitoring '$account'."
			monitor_account "$account" &
		fi
	done

	tail --pid="$tb_pid" -f /dev/null
done
